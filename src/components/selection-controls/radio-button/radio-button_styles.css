/**
* RadioButton styles
*
* .wc-RadioButton - main block & radio wrapper
*     .wc-RadioButton.is-compact - a more compact version of a radio button (less height)
* .wc-RadioButton__input - the <input> tag
* .wc-RadioButton__inputLabel - the radio button's <label> tag that contains everything that's visible
* .wc-RadioButton__label - the actual displayed text label
* .wc-RadioButton__radio - the visible fake radio button
* .wc-RadioButton.is-inRadioGroupColumn - buttons horizontally align in columns
* .wc-RadioButton.is-inRadioGroupList - buttons vertically align in a single column
* .wc-RadioButton.is-inRadioGroupRow - buttons horizontally align in rows
*/
/*------------------------------------*\

         #BREAKPOINTS SETTINGS

\*------------------------------------*/
/*----------------------------------*\
        #BASIC-THEME
\*----------------------------------*/
/*------------------------------------*\
     #OPACITIES
\*------------------------------------*/
/*------------------------------------*\
     #TYPOGRAPHY-ICONS
\*------------------------------------*/
/*------------------------------------*\
     #DIVIDERS
\*------------------------------------*/
/*------------------------------------*\
     #RIPPLE EFFECT
\*------------------------------------*/
/*------------------------------------*\
     #BUTTONS
\*------------------------------------*/
/*------------------------------------*\
         #RESPONSIVE
\*------------------------------------*/
/**
* Used to work for responsive design of mobile first.
* @param  {Number} $width - The width of a large display, for example a desktop or tablet display.
*
*/
/**
* Used to work for responsive design of mobile first.
* Sets a max width to respong
* @param  {Number} $width - The width of a small display.
*
*/
/*------------------------------------*\

         #TYPOGRAPHY MIXINS

\*------------------------------------*/
/*------------------------------------*\

         #TYPOGRAPHY STANDARDS

\*------------------------------------*/
/**
 * Generates all the CSS properties for the respective typography type
 * @param  {String} $text-type  A key from the $typography-variables map where the properties
 *                              and their values are going to be obtained.
 * @return {CssRules}           CSS properties for the given text type.
 */
/* line 28, radio-button_styles.scss */
.wc-RadioButton {
  display: inline-block;
}
/* line 33, radio-button_styles.scss */
.wc-RadioButton__input {
  float: left;
  height: 0;
  margin: 0;
  opacity: 0;
  position: absolute;
  width: 0;
}
/* line 44, radio-button_styles.scss */
.wc-RadioButton__inputLabel {
  -webkit-tap-highlight-color: transparent;
  align-items: center;
  cursor: pointer;
  display: flex;
  vertical-align: middle;
  width: 100%;
}
/* line 55, radio-button_styles.scss */
.wc-RadioButton__label {
  font-size: 16px;
  letter-spacing: 0.3px;
  line-height: 20px;
  font-weight: normal;
  font-family: "MuseoSans300", "Helvetica Neue", Helvetica, Arial, sans-serif;
  color: rgba(0, 0, 0, 0.87);
  margin-left: 24px;
  overflow: hidden;
  position: relative;
  text-overflow: ellipsis;
  top: 2px;
  white-space: nowrap;
  width: 100%;
}
/* line 69, radio-button_styles.scss */
.wc-RadioButton__radio {
  border-radius: 50%;
  border: 2px solid rgba(0, 0, 0, 0.54);
  box-sizing: border-box;
  content: '';
  height: 24px;
  min-height: 24px;
  min-width: 24px;
  position: relative;
  transition: border-color 0.1s ease-in-out;
  width: 24px;
}
/* line 81, radio-button_styles.scss */
.wc-RadioButton__radio:before {
  border-radius: 50%;
  content: '';
  display: inline-block;
  height: 12px;
  margin: 4px;
  transform: scale(0);
  transition: transform 0.2s ease-in-out;
  width: 12px;
}
/* line 95, radio-button_styles.scss */
.wc-RadioButton__input:checked + .wc-RadioButton__inputLabel .wc-RadioButton__radio {
  border-color: #26C6DA;
}
/* line 98, radio-button_styles.scss */
.wc-RadioButton__input:checked + .wc-RadioButton__inputLabel .wc-RadioButton__radio:before {
  transform: scale(1);
  background-color: #26C6DA;
}
/* line 104, radio-button_styles.scss */
.wc-RadioButton__input[disabled="disabled"] + .wc-RadioButton__inputLabel {
  cursor: default;
}
/* line 108, radio-button_styles.scss */
.wc-RadioButton__input[disabled="disabled"] + .wc-RadioButton__inputLabel .wc-RadioButton__radio {
  border-color: rgba(0, 0, 0, 0.26);
}
/* line 112, radio-button_styles.scss */
.wc-RadioButton__input[disabled="disabled"]:checked + .wc-RadioButton__inputLabel .wc-RadioButton__radio:before {
  background-color: rgba(0, 0, 0, 0.26);
}
/* line 116, radio-button_styles.scss */
.wc-RadioButton__input[disabled="disabled"] + .wc-RadioButton__inputLabel .wc-RadioButton__label {
  color: rgba(0, 0, 0, 0.26);
}
/* line 120, radio-button_styles.scss */
.wc-RadioButton.is-inRadioGroupColumn, .wc-RadioButton.is-inRadioGroupList, .wc-RadioButton.is-inRadioGroupRow {
  align-items: center;
  display: flex;
  flex-shrink: 0;
  height: 48px;
}
/* line 131, radio-button_styles.scss */
.wc-RadioButton.is-compact, .wc-RadioButton.is-compact.is-inRadioGroupColumn, .wc-RadioButton.is-compact.is-inRadioGroupList, .wc-RadioButton.is-compact.is-inRadioGroupRow {
  height: 40px;
}
/* line 140, radio-button_styles.scss */
.wc-RadioButton.is-inRadioGroupColumn {
  flex-grow: 0;
  width: 100%;
}
/* line 144, radio-button_styles.scss */
.wc-RadioButton.is-inRadioGroupColumn .wc-RadioButton__label {
  width: calc(100% - 48px);
}
/* line 152, radio-button_styles.scss */
.wc-RadioButton.is-inRadioGroupRow + .wc-RadioButton.is-inRadioGroupRow {
  margin-left: 40px;
}
@media screen and (min-width: 768px) {
  /* line 160, radio-button_styles.scss */
  .wc-RadioButton.is-inRadioGroupColumn {
    width: 33%;
  }
}
