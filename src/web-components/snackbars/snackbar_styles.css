/**
* Snackbar styles
*
* wc-Snackbar
*     wc-Snackbar.has-listItem - State when the snackbar has the list item layout, it changes the paddings
* wc-Snackbar__listItem - custom styles for the snackbar wc-ListItem component
* wc-Snackbar__listItemText - custom styles for the text in the snackbar wc-ListItem component
*/
/*------------------------------------*\

         #BREAKPOINTS SETTINGS

\*------------------------------------*/
/*----------------------------------*\
        #BASIC-THEME
\*----------------------------------*/
/*------------------------------------*\
     #OPACITIES
\*------------------------------------*/
/*------------------------------------*\
     #TYPOGRAPHY-ICONS
\*------------------------------------*/
/*------------------------------------*\
     #DIVIDERS
\*------------------------------------*/
/*------------------------------------*\
     #RIPPLE EFFECT
\*------------------------------------*/
/*------------------------------------*\
     #BUTTONS
\*------------------------------------*/
/*------------------------------------*\

        #ELEVATION-SETTINGS

\*------------------------------------*/
/*----------------------------------*\
        #BASIC-THEME
\*----------------------------------*/
/*------------------------------------*\
     #OPACITIES
\*------------------------------------*/
/*------------------------------------*\
     #TYPOGRAPHY-ICONS
\*------------------------------------*/
/*------------------------------------*\
     #DIVIDERS
\*------------------------------------*/
/*------------------------------------*\
     #RIPPLE EFFECT
\*------------------------------------*/
/*------------------------------------*\
     #BUTTONS
\*------------------------------------*/
/*------------------------------------*\
         #RESPONSIVE
\*------------------------------------*/
/**
* Used to work for responsive design of mobile first.
* @param  {Number} $width - The width of a large display, for example a desktop or tablet display.
*
*/
/**
* Used to work for responsive design of mobile first.
* Sets a max width to respong
* @param  {Number} $width - The width of a small display.
*
*/
/*----------------------------------*\
        #BASIC-THEME
\*----------------------------------*/
/*------------------------------------*\
     #OPACITIES
\*------------------------------------*/
/*------------------------------------*\
     #TYPOGRAPHY-ICONS
\*------------------------------------*/
/*------------------------------------*\
     #DIVIDERS
\*------------------------------------*/
/*------------------------------------*\
     #RIPPLE EFFECT
\*------------------------------------*/
/*------------------------------------*\
     #BUTTONS
\*------------------------------------*/
/*------------------------------------*\
         #utilities
\*------------------------------------*/
/**
* Generates the basic styles for shadows and sets the z-index
* Elevations are defined in the design styleguide.
* @param {Number} $elevation - size of the shadow(without unit size)
*/
/**
* Generates the basic styles for shadows
* Elevations are defined in the design styleguide.
* @param {Number} $elevation - size of the shadow(without unit size)
*/
/**
 * Adds ellipsis to any block or element when the text may overflow its boundaries
 * @return {CssRules} rules for adding ellipsis to overflown text
 */
/**
 * Generates the hack for clearing floats
 * @return {CssRules} rules for the clearfix hack
 */
/*------------------------------------*\

         #TYPOGRAPHY MIXINS

\*------------------------------------*/
/*------------------------------------*\

         #TYPOGRAPHY STANDARDS

\*------------------------------------*/
/**
 * Generates all the CSS properties for the respective typography type
 * @param  {String} $text-type  A key from the $typography-variables map where the properties
 *                              and their values are going to be obtained.
 * @return {CssRules}           CSS properties for the given text type.
 */
/* line 34, snackbar_styles.scss */
.wc-Snackbar {
  font-size: 16px;
  letter-spacing: 0.3px;
  line-height: 20px;
  font-weight: normal;
  font-family: "MuseoSans300", "Helvetica Neue", Helvetica, Arial, sans-serif;
  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.12), 0 6px 6px 0 rgba(0, 0, 0, 0.24);
  z-index: 6;
  align-items: center;
  background-color: #37474F;
  bottom: 0px;
  cursor: default;
  display: flex;
  left: 0px;
  min-height: 48px;
  padding-left: 24px;
  padding-right: 8px;
  position: fixed;
  transform: translate(0, 200%);
  transition: transform 0.5s cubic-bezier(0.4, 0, 1, 1);
  width: 100%;
  will-change: transform;
}
/* line 55, snackbar_styles.scss */
.wc-Snackbar__label {
  color: #FFF;
  float: left;
  pointer-events: none;
  padding-top: 14px;
  padding-bottom: 14px;
  padding-right: 16px;
}
/* line 66, snackbar_styles.scss */
.wc-Snackbar .wc-Snackbar__custom {
  align-self: center;
  background-color: transparent;
  color: #26C6DA;
  cursor: pointer;
  display: none;
  min-height: 40px;
  text-transform: uppercase;
  float: right;
  margin-left: auto;
}
/* line 77, snackbar_styles.scss */
.wc-Snackbar .wc-Snackbar__custom:active, .wc-Snackbar .wc-Snackbar__custom:hover, .wc-Snackbar .wc-Snackbar__custom:focus {
  background-color: transparent;
  color: #00ACC1;
}
/* line 85, snackbar_styles.scss */
.wc-Snackbar__close {
  background-color: transparent;
  color: #FFF;
  cursor: pointer;
  display: none;
  font-size: 16px;
  margin-right: 12px;
  min-width: 0px;
  vertical-align: middle;
}
/* line 95, snackbar_styles.scss */
.wc-Snackbar__close:active, .wc-Snackbar__close:hover, .wc-Snackbar__close:focus {
  background-color: transparent;
  color: rgba(255, 255, 255, 0.7);
}
/* line 103, snackbar_styles.scss */
.wc-Snackbar .wc-Snackbar__listItem {
  background-color: #37474F;
}
/* line 109, snackbar_styles.scss */
.wc-Snackbar .wc-Snackbar__listItemText {
  color: #FFF;
}
/* line 115, snackbar_styles.scss */
.wc-Snackbar.has-listItem {
  padding-left: 8px;
}
/* line 121, snackbar_styles.scss */
.wc-Snackbar.is-custom-enabled .wc-Snackbar__custom {
  display: inline-block;
}
/* line 127, snackbar_styles.scss */
.wc-Snackbar.is-close-enabled .wc-Snackbar__label, .wc-Snackbar.is-custom-enabled .wc-Snackbar__label {
  padding-right: 8px;
}
/* line 134, snackbar_styles.scss */
.wc-Snackbar.is-action-down {
  display: block;
}
/* line 140, snackbar_styles.scss */
.wc-Snackbar.is-action-down .wc-Snackbar__label {
  padding-bottom: 0;
  padding-right: 16px;
}
/* line 147, snackbar_styles.scss */
.wc-Snackbar.is-active {
  transform: translate(0, 0);
  transition: transform 0.5s cubic-bezier(0, 0, 0.2, 1);
}
@media screen and (min-width: 1025px) {
  /* line 34, snackbar_styles.scss */
  .wc-Snackbar {
    border-radius: 4px;
    bottom: 24px;
    left: 24px;
    max-width: 568px;
    min-width: 288px;
    width: auto;
  }
  /* line 164, snackbar_styles.scss */
  .wc-Snackbar.is-close-enabled .wc-Snackbar__close {
    display: inline-block;
  }
  /* line 170, snackbar_styles.scss */
  .wc-Snackbar.is-close-enabled .wc-Snackbar__label, .wc-Snackbar.is-custom-enabled .wc-Snackbar__label {
    padding-right: 32px;
  }
  /* line 177, snackbar_styles.scss */
  .wc-Snackbar.is-action-down {
    display: flex;
  }
  /* line 183, snackbar_styles.scss */
  .wc-Snackbar.is-action-down .wc-Snackbar__label {
    padding-bottom: 14px;
  }
}
